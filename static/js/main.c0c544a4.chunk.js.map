{"version":3,"sources":["FilterForm.js","TimelineItem.js","Timeline.js","App.js","index.js","reportWebVitals.js"],"names":["FilterForm","tags","topic","fullPage","updateTopic","updateTimeline","options","map","tag","value","sort","a","b","key","localeCompare","className","name","id","onSubmit","tabIndex","type","onChange","placeholder","list","TimelineItem","props","to","classes","side","join","birth","Timeline","decoratedItems","items","data","index","App","array","languages","useParams","history","useHistory","useState","topicFormFullPage","setTopicFormFullPage","currentTopic","setCurrentTopic","useEffect","window","scroll","top","left","behavior","filterForm","event","target","preventDefault","push","currentLanguages","filter","language","includes","timeline","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","reduce","lang","Array","from","Set","ReactDOM","render","StrictMode","hashType","path","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.c0c544a4.chunk.js","sourcesContent":["import React from 'react';\nimport './FilterForm.css';\n\nfunction FilterForm({\n  tags,\n  topic,\n  fullPage,\n  updateTopic,\n  updateTimeline\n}) {\n  const options = tags\n    .map(tag => <option value={tag} key={tag} />)\n    .sort((a, b) => a.key.localeCompare(b.key));\n\n  return <form\n      className={fullPage ? 'fullpage' : ''}\n      name='filter'\n      id='filter'\n      onSubmit={updateTimeline}\n    >\n    <label id='topic'>Topic: <input\n        tabIndex='1'\n        type='text'\n        value={topic}\n        onChange={updateTopic}\n        placeholder='OOP, Lisp, JVM...'\n        list='topics'\n      />\n    </label>\n    <datalist id='topics'>\n      {options}\n    </datalist>\n\n    <label id='submit'>\n      <input type='submit' value='Update' />\n    </label>\n  </form>;\n}\n\nexport default FilterForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Timeline.css';\nimport './TimelineItem.css';\n\nfunction TimelineItem(props) {\n  const tags = <ul className='tagsList'>{\n      props.tags.map(\n        tag => <li key={tag}><Link to={tag}>{tag}</Link></li>\n      )\n    }</ul>;\n\n  const classes = [\n    'TimelineItem',\n    props.type,\n    props.side,\n  ].join(' ');\n\n  return <li className={classes}>\n    <span className='content'>\n      {props.name} ({props.birth})\n      {tags}\n    </span>\n  </li>;\n}\n\nexport default TimelineItem;\n","import React from 'react';\nimport TimelineItem from './TimelineItem';\nimport './Timeline.css';\n\nfunction Timeline({ items }) {\n  const decoratedItem = (data, index = 0) => {\n    const side = index % 2 ? 'left' : 'right';\n    return <TimelineItem\n      key={data.name}\n      name={data.name}\n      type={data.type}\n      birth={data.birth}\n      tags={data.tags}\n      side={side}\n    />;\n  };\n\n  const decoratedItems = items\n    .sort((a, b) => (a.birth - b.birth))\n    .map(decoratedItem);\n\n  return <ul className='Timeline'>{decoratedItems}</ul>;\n}\n\nexport default Timeline;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport FilterForm from './FilterForm';\nimport Timeline from './Timeline';\n\nfunction App ({ languages, tags }) {\n  const { tag } = useParams();\n  const history = useHistory();\n\n  const [topicFormFullPage, setTopicFormFullPage] = useState(!tag);\n  const [currentTopic, setCurrentTopic] = useState(''); // controls FilterForm\n\n  // update state and window upon change in URL query parameters:\n  useEffect(() => {\n    window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n    setCurrentTopic(tag || '');\n  }, [tag]);\n\n  const updateTopic = event => setCurrentTopic(event.target.value);\n\n  const updateTimeline = event => {\n    // avoid refreshing the page:\n    if (event) event.preventDefault();\n\n    // update the browser history with a new URL:\n    history.push(currentTopic);\n\n    // minimize the topic form after its first use:\n    if (topicFormFullPage) setTopicFormFullPage(false);\n  };\n\n  const filterForm = <FilterForm\n      tags={tags}\n      topic={currentTopic}\n      updateTopic={updateTopic}\n      updateTimeline={updateTimeline}\n      fullPage={topicFormFullPage}\n    />;\n\n  const currentLanguages = tag ? languages.filter(\n      language => language.tags.includes(tag)\n    ) : languages;\n  const timeline = topicFormFullPage ? '' :\n    <Timeline items={currentLanguages} />;\n\n  return <React.Fragment>\n    {filterForm}\n    {timeline}\n  </React.Fragment>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst tagsConcat = (tags, lang) => [...tags, ...lang.tags];\nconst clean = array => Array.from(new Set(array));\n\nconst languages = require('./languages.json');\nconst tags = clean(languages.reduce(tagsConcat, []));\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter hashType='noslash'>\n      <Route path={['/:tag', '/']}>\n        <App languages={languages} tags={tags} />\n      </Route>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals(console.log);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}
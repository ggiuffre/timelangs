(this.webpackJsonptimelangs=this.webpackJsonptimelangs||[]).push([[0],{18:function(e,a,t){},27:function(e,a,t){},28:function(e,a,t){},29:function(e,a,t){},35:function(e){e.exports=JSON.parse('[{"name":"Ada","birth":1980,"tags":["Pascal","OOP","embedded","nominal type system","imperative programming","ISO standard","concurrency","statically typed"]},{"name":"ALGOL","birth":1958,"tags":["ALGOL","scientific computing","imperative programming","ISO standard","statically typed"]},{"name":"AWK","birth":1977,"tags":["scripting","text manipulation","imperative programming"]},{"name":"Bash","birth":1989,"tags":["scripting","text manipulation","imperative programming"]},{"name":"BCPL","birth":1967,"tags":["CPL","imperative programming","typeless"]},{"name":"C","birth":1972,"tags":["C","embedded","zero-indexed","ISO standard","nominal type system","imperative programming","statically typed"]},{"name":"C++","birth":1985,"tags":["C","OOP","embedded","zero-indexed","ISO standard","nominal type system","imperative programming","statically typed"]},{"name":"C#","birth":2000,"tags":[".NET","OOP","zero-indexed","garbage collector","ISO standard","nominal type system","imperative programming","statically typed"]},{"name":"Caml","birth":1985,"tags":["ML","imperative programming","declarative programming","FP","statically typed"]},{"name":"Clojure","birth":2007,"tags":["Lisp","JVM","Java","FP","concurrency","garbage collector","zero-indexed","declarative programming","dynamically typed"]},{"name":"COBOL","birth":1959,"tags":["ISO standard","nominal type system","imperative programming","statically typed"]},{"name":"Common Lisp","birth":1984,"tags":["Lisp","FP","OOP","declarative programming","garbage collector","zero-indexed","nominal type system","structural type system","dynamically typed"]},{"name":"Coq","birth":1989,"tags":["FP","purely functional","declarative programming"]},{"name":"CPL","birth":1963,"tags":["CPL","multi-paradigm","imperative programming"]},{"name":"Dart","birth":2011,"tags":["web","mobile","garbage collector","OOP","FP","iOS","Android","nominal type system","statically typed","imperative programming"]},{"name":"Eiffel","birth":1986,"tags":["OOP","nominal type system","concurrency","imperative programming","statically typed"]},{"name":"Elixir","birth":2011,"tags":["Erlang","declarative programming","FP","concurrency","off-side rule","dynamically typed"]},{"name":"Elm","birth":2012,"tags":["FP","declarative programming","purely functional","web","statically typed"]},{"name":"Erlang","birth":1986,"tags":["Erlang","FP","concurrency","garbage collector","declarative programming","dynamically typed"]},{"name":"Fortran","birth":1957,"tags":["scientific computing","ISO standard","nominal type system","imperative programming","statically typed"]},{"name":"F#","birth":2005,"tags":[".NET","ML","OCaml","FP","OOP","off-side rule","zero-indexed","nominal type system","imperative programming","declarative programming","statically typed"]},{"name":"Go","birth":2009,"tags":["concurrency","OOP","structural type system","garbage collector","zero-indexed","imperative programming","statically typed"]},{"name":"Groovy","birth":2003,"tags":["Java","JVM","OOP","imperative programming","FP","dynamically typed"]},{"name":"GraphQL","birth":2015,"tags":["web","declarative programming"]},{"name":"Haskell","birth":1990,"tags":["Haskell","FP","garbage collector","concurrency","nominal type system","zero-indexed","purely functional","off-side rule","declarative programming","statically typed"]},{"name":"Java","birth":1995,"tags":["Java","JVM","OOP","garbage collector","concurrency","mobile","Android","zero-indexed","nominal type system","imperative programming","FP","statically typed"]},{"name":"JavaScript","birth":1997,"tags":["JavaScript","scripting","ECMAScript","event-driven","OOP","FP","garbage collector","zero-indexed","imperative programming","dynamically typed"]},{"name":"Julia","birth":2012,"tags":["Julia","garbage collector","nominal type system","FP","structural type system","imperative programming","concurrency","scientific computing","dynamically typed"]},{"name":"Kotlin","birth":2011,"tags":["Java","JVM","mobile","garbage collector","FP","Android","nominal type system","imperative programming","statically typed"]},{"name":"Lisp","birth":1958,"tags":["Lisp","FP","garbage collector","zero-indexed","declarative programming","ISO standard","dynamically typed"]},{"name":"Lua","birth":1993,"tags":["embedded","garbage collector","statically typed","imperative programming"]},{"name":"MATLAB","birth":1984,"tags":["scientific computing","OOP","dynamically typed","imperative programming"]},{"name":"ML","birth":1973,"tags":["ML","FP","garbage collector","declarative programming","statically typed"]},{"name":"Nim","birth":2008,"tags":["scripting","OOP","imperative programming","FP","zero-indexed","off-side rule","statically typed"]},{"name":"Objective-C","birth":1984,"tags":["C","OOP","mobile","iOS","imperative programming","zero-indexed","nominal type system","statically typed"]},{"name":"OCaml","birth":1985,"tags":["ML","FP","garbage collector","statically typed","OOP","nominal type system","structural type system","imperative programming","declarative programming"]},{"name":"Oz","birth":1991,"tags":["multi-paradigm","structural type system","FP","imperative programming","concurrency","dataflow","declarative programming","logic programming","dynamically typed"]},{"name":"Pascal","birth":1970,"tags":["Pascal","ALGOL","ISO standard","nominal type system","imperative programming","statically typed"]},{"name":"Perl","birth":1987,"tags":["scripting","zero-indexed","garbage collector","text manipulation","imperative programming","FP","dynamically typed"]},{"name":"PHP","birth":1995,"tags":["scripting","nominal type system","zero-indexed","imperative programming","garbage collector","web","statically typed"]},{"name":"PL/I","birth":1964,"tags":["ISO standard","imperative programming"]},{"name":"Prolog","birth":1972,"tags":["logic programming","ISO standard","dynamically typed","declarative programming"]},{"name":"Python","birth":1990,"tags":["scripting","structural type system","OOP","FP","zero-indexed","garbage collector","imperative programming","off-side rule","dynamically typed"]},{"name":"R","birth":1993,"tags":["statistics","scripting","imperative programming","FP","scientific computing","dynamically typed"]},{"name":"Racket","birth":1995,"tags":["Lisp","FP","garbage collector","multi-paradigm","imperative programming","dynamically typed"]},{"name":"Ruby","birth":1995,"tags":["OOP","scripting","garbage collector","FP","zero-indexed","imperative programming","ISO standard","dynamically typed"]},{"name":"Rust","birth":2010,"tags":["concurrency","nominal type system","FP","imperative programming","statically typed"]},{"name":"Scala","birth":2004,"tags":["Java","JVM","OOP","mobile","Android","FP","zero-indexed","multi-paradigm","nominal type system","structural type system","imperative programming","concurrency","statically typed"]},{"name":"Scheme","birth":1975,"tags":["Lisp","FP","garbage collector","declarative programming","dynamically typed"]},{"name":"Smalltalk-80","birth":1980,"tags":["OOP","garbage collector","scripting","imperative programming","dynamically typed"]},{"name":"SNOBOL","birth":1962,"tags":["text manipulation","imperative programming"]},{"name":"SQL","birth":1974,"tags":["databases","query language","ISO standard","declarative programming"]},{"name":"sed","birth":1974,"tags":["scripting","text manipulation","declarative programming"]},{"name":"Swift","birth":2014,"tags":["OOP","mobile","iOS","zero-indexed","nominal type system","structural type system","imperative programming","statically typed"]},{"name":"TeX","birth":1978,"tags":["typesetting","markup","imperative programming"]},{"name":"TypeScript","birth":2012,"tags":["JavaScript","scripting","ECMAScript","event-driven","OOP","FP","garbage collector","zero-indexed","structural type system","imperative programming","statically typed"]},{"name":"VBA","birth":1993,"tags":["event-driven","zero-indexed","nominal type system"]},{"name":"XML","birth":1996,"tags":["XML","web","markup","declarative programming","databases"]},{"name":"XPath","birth":1998,"tags":["XML","web","query language","nominal type system","declarative programming"]}]')},36:function(e,a,t){"use strict";t.r(a);var i=t(16),r=t(1),n=t(0),m=t.n(n),l=t(20),s=t.n(l),c=t(8),g=t(2),o=(t(27),t(17));t(28);var p=function(e){var a=e.tags,t=e.topic,i=e.fullPage,n=e.updateTopic,m=e.updateTimeline,l=a.map((function(e){return Object(r.jsx)("option",{value:e},e)})).sort((function(e,a){return e.key.localeCompare(a.key)}));return Object(r.jsxs)("form",{className:i?"fullpage":"",name:"filter",id:"filter",onSubmit:m,children:[Object(r.jsxs)("label",{id:"topic",children:["Topic: ",Object(r.jsx)("input",{tabIndex:"1",type:"text",value:t,onChange:n,placeholder:"OOP, Lisp, JVM...",list:"topics"})]}),Object(r.jsx)("datalist",{id:"topics",children:l}),Object(r.jsx)("label",{id:"submit",children:Object(r.jsx)("input",{type:"submit",value:"Update"})})]})};t(18),t(29);var d=function(e){var a=Object(r.jsx)("ul",{className:"tagsList",children:e.tags.map((function(e){return Object(r.jsx)("li",{children:Object(r.jsx)(c.b,{to:e,children:e})},e)}))}),t=["TimelineItem",e.type,e.side].join(" ");return Object(r.jsx)("li",{className:t,children:Object(r.jsxs)("span",{className:"content",children:[e.name," (",e.birth,")",a]})})};var y=function(e){var a=e.items.sort((function(e,a){return e.birth-a.birth})).map((function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=a%2?"left":"right";return Object(r.jsx)(d,{name:e.name,type:e.type,birth:e.birth,tags:e.tags,side:t},e.name)}));return Object(r.jsx)("ul",{className:"Timeline",children:a})};var b,u=function(e){var a=e.languages,t=e.tags,i=Object(g.f)().tag,l=Object(g.e)(),s=Object(n.useState)(!i),c=Object(o.a)(s,2),d=c[0],b=c[1],u=Object(n.useState)(""),O=Object(o.a)(u,2),h=O[0],v=O[1];Object(n.useEffect)((function(){window.scroll({top:0,left:0,behavior:"smooth"}),v(i||"")}),[i]);var P=Object(r.jsx)(p,{tags:t,topic:h,updateTopic:function(e){return v(e.target.value)},updateTimeline:function(e){e&&e.preventDefault(),l.push(h),d&&b(!1)},fullPage:d}),f=i?a.filter((function(e){return e.tags.includes(i)})):a,j=d?"":Object(r.jsx)(y,{items:f});return Object(r.jsxs)(m.a.Fragment,{children:[P,j]})},O=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,37)).then((function(a){var t=a.getCLS,i=a.getFID,r=a.getFCP,n=a.getLCP,m=a.getTTFB;t(e),i(e),r(e),n(e),m(e)}))},h=t(35),v=(b=h.reduce((function(e,a){return[].concat(Object(i.a)(e),Object(i.a)(a.tags))}),[]),Array.from(new Set(b)));s.a.render(Object(r.jsx)(m.a.StrictMode,{children:Object(r.jsx)(c.a,{hashType:"noslash",children:Object(r.jsx)(g.a,{path:["/:tag","/"],children:Object(r.jsx)(u,{languages:h,tags:v})})})}),document.getElementById("root")),O(console.log)}},[[36,1,2]]]);
//# sourceMappingURL=main.c0c544a4.chunk.js.map